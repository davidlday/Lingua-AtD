name    = Lingua-AtD
author  = David L. Day <dday376@gmail.com>
license = Perl_5
copyright_holder = David L. Day
copyright_year   = 2011


; -- Basics
[PerlTidy]
[AutoPrereqs]
[AutoVersion]
[GatherDir]
exclude_match = \.bak$
exclude_filename = build/
[PruneCruft]

; -- Generate Tests
[Test::Compile]
[ReportVersions::Tiny]
[ExtraTests]

; -- Munge Files
[Prepender]
copyright = 1
[PkgVersion]
[PodWeaver]

; -- Update Changelog(s)
[NextRelease]
time_zone = EST
filename = Changes
;[ChangelogFromGit]
;tag_regexp = ^release-(.+)$
;filename = CommitLog

; -- Meta Info
[ExecDir]
dir = bin
;[MinimumPerl]
[MetaConfig]
[MetaData::BuiltWith]           ; dump entire perl modules we used to build into metadata
;[Repository]                    ; set git repository path by looking at git configs
;git_remote = origin
[MetaResources]                 ; add arbitrary resources to metadata
;license = http://dev.perl.org/licenses/
repository = http://github.com/davidlday/Lingua-AtD
[License]
[MakeMaker]
[Readme]
[MetaYAML]
[MetaJSON]
[Manifest]
[InstallGuide]

; -- pre-release
;[CheckChangesHasContent]
changelog = Changes
;[Git::Check]                    ; check working path for any uncommitted stuff ( exempt Changes because it will be committed after release )
;changelog = Changes
[TestRelease]                   ; make sure that we won't release a FAIL distro :)
[ConfirmRelease]                ; double-check that we ACTUALLY want a release, ha!

; -- post-release
;[ArchiveRelease]                ; archive our tarballs under releases/
;directory = releases
;[Git::Commit]                   ; commit the dzil-generated stuff
;changelog = Changes
;commit_msg = New CPAN release of %N - v%v%n%n%c
;time_zone = UTC
;add_files_in = releases         ; add our release tarballs to the repo
;[Git::Tag]                      ; tag our new release
;tag_format = release-%v
;tag_message = Tagged release-%v
;[Git::Push]                     ; automatically push to the "origin" defined in .git/config
;push_to = origin
